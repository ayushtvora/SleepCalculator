import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SleepCalculator {
    private JPanel panelMain;
    private JTextField Day1TextField;
    private JTextField Month1TextField;
    private JTextField Year1TextField;
    private JTextField Day2TextField;
    private JTextField Month2TextField;
    private JTextField Year2TextField;
    private JButton CalculateButton;
    private JButton ExitButton;
    private JTextField DaysAliveTextField;
    private JTextField HoursSleptTextField;
    private JLabel Title;
    private JLabel BirthdayLabel;
    private JLabel DateLabel;
    private JLabel Day1Label;
    private JLabel Month1Label;
    private JLabel Year1Label;
    private JLabel Day2Label;
    private JLabel Month2Label;
    private JLabel Year2Label;

    public SleepCalculator() {
        CalculateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Declare and assign variables
                    int birthdayDate = Integer.parseInt(Day1TextField.getText());
                    int birthdayMonth = Integer.parseInt(Month1TextField.getText());
                    int birthdayYear = Integer.parseInt(Year1TextField.getText());
                    int currentDate = Integer.parseInt(Day2TextField.getText());
                    int currentMonth = Integer.parseInt(Month2TextField.getText());
                    int currentYear = Integer.parseInt(Year2TextField.getText());
                    int differenceDate = currentDate - birthdayDate;
                    int differenceMonth = currentMonth - birthdayMonth;
                    int differenceYear = currentYear - birthdayYear;
                    int daysAlive;
                    int hoursSlept;

                    // Check for input errors
                    if (birthdayDate > 31 || currentDate > 31) {
                        JOptionPane.showMessageDialog(panelMain, "Error! One of your dates exceed 31.");
                    } else if (birthdayDate < 1 || currentDate < 1) {
                        JOptionPane.showMessageDialog(panelMain, "Error! One of your dates is negative or 0.");
                    } else if (birthdayMonth > 12 || currentMonth > 12) {
                        JOptionPane.showMessageDialog(panelMain, "Error! One of your months exceeds 12.");
                    } else if (birthdayMonth < 1 || currentMonth < 1) {
                        JOptionPane.showMessageDialog(panelMain, "Error! One of your months is negative or 0.");
                    } else {
                        // Program math
                        daysAlive = differenceDate + (differenceMonth * 30) + (differenceYear * 365);
                        hoursSlept = daysAlive * 8;

                        // Display answer
                        DaysAliveTextField.setText("You have been alive for " + daysAlive + " days.");
                        HoursSleptTextField.setText("You have slept for " + hoursSlept + " hours.");
                    }


                } catch (Exception exception) {
                    JOptionPane.showMessageDialog(panelMain, "Error! Please check your inputs.");
                }


            }
        });
        ExitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Exit the program
                System.exit(0);
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("SleepCalculator");
        frame.setContentPane(new SleepCalculator().panelMain);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(550, 400);
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridBagLayout());
        panelMain.setBackground(new Color(-11233601));
        Font panelMainFont = this.$$$getFont$$$(null, -1, 14, panelMain.getFont());
        if (panelMainFont != null) panelMain.setFont(panelMainFont);
        panelMain.setForeground(new Color(-11233601));
        panelMain.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(25, 25, 25, 25), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        Title = new JLabel();
        Font TitleFont = this.$$$getFont$$$("Century Gothic", -1, 24, Title.getFont());
        if (TitleFont != null) Title.setFont(TitleFont);
        Title.setForeground(new Color(-14731456));
        Title.setText("Sleep Calculator");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        panelMain.add(Title, gbc);
        BirthdayLabel = new JLabel();
        Font BirthdayLabelFont = this.$$$getFont$$$(null, -1, 14, BirthdayLabel.getFont());
        if (BirthdayLabelFont != null) BirthdayLabel.setFont(BirthdayLabelFont);
        BirthdayLabel.setForeground(new Color(-16777216));
        BirthdayLabel.setText("Enter your Birthdate:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        panelMain.add(BirthdayLabel, gbc);
        DateLabel = new JLabel();
        Font DateLabelFont = this.$$$getFont$$$(null, -1, 14, DateLabel.getFont());
        if (DateLabelFont != null) DateLabel.setFont(DateLabelFont);
        DateLabel.setForeground(new Color(-16777216));
        DateLabel.setText("Enter Today's Date");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        panelMain.add(DateLabel, gbc);
        Day1Label = new JLabel();
        Font Day1LabelFont = this.$$$getFont$$$(null, -1, 14, Day1Label.getFont());
        if (Day1LabelFont != null) Day1Label.setFont(Day1LabelFont);
        Day1Label.setForeground(new Color(-16777216));
        Day1Label.setText("Day");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Day1Label, gbc);
        Month1Label = new JLabel();
        Font Month1LabelFont = this.$$$getFont$$$(null, -1, 14, Month1Label.getFont());
        if (Month1LabelFont != null) Month1Label.setFont(Month1LabelFont);
        Month1Label.setForeground(new Color(-16777216));
        Month1Label.setText("Month");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Month1Label, gbc);
        Year1Label = new JLabel();
        Font Year1LabelFont = this.$$$getFont$$$(null, -1, 14, Year1Label.getFont());
        if (Year1LabelFont != null) Year1Label.setFont(Year1LabelFont);
        Year1Label.setForeground(new Color(-16777216));
        Year1Label.setText("Year");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Year1Label, gbc);
        Day1TextField = new JTextField();
        Day1TextField.setBackground(new Color(-1));
        Font Day1TextFieldFont = this.$$$getFont$$$(null, -1, 14, Day1TextField.getFont());
        if (Day1TextFieldFont != null) Day1TextField.setFont(Day1TextFieldFont);
        Day1TextField.setForeground(new Color(-16777216));
        Day1TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 20);
        panelMain.add(Day1TextField, gbc);
        Month1TextField = new JTextField();
        Month1TextField.setBackground(new Color(-1));
        Font Month1TextFieldFont = this.$$$getFont$$$(null, -1, 14, Month1TextField.getFont());
        if (Month1TextFieldFont != null) Month1TextField.setFont(Month1TextFieldFont);
        Month1TextField.setForeground(new Color(-16777216));
        Month1TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 20);
        panelMain.add(Month1TextField, gbc);
        Year1TextField = new JTextField();
        Year1TextField.setBackground(new Color(-1));
        Font Year1TextFieldFont = this.$$$getFont$$$(null, -1, 14, Year1TextField.getFont());
        if (Year1TextFieldFont != null) Year1TextField.setFont(Year1TextFieldFont);
        Year1TextField.setForeground(new Color(-16777216));
        Year1TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 20);
        panelMain.add(Year1TextField, gbc);
        Day2Label = new JLabel();
        Font Day2LabelFont = this.$$$getFont$$$(null, -1, 14, Day2Label.getFont());
        if (Day2LabelFont != null) Day2Label.setFont(Day2LabelFont);
        Day2Label.setForeground(new Color(-16777216));
        Day2Label.setText("Day");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Day2Label, gbc);
        Month2Label = new JLabel();
        Font Month2LabelFont = this.$$$getFont$$$(null, -1, 14, Month2Label.getFont());
        if (Month2LabelFont != null) Month2Label.setFont(Month2LabelFont);
        Month2Label.setForeground(new Color(-16777216));
        Month2Label.setText("Month");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Month2Label, gbc);
        Year2Label = new JLabel();
        Font Year2LabelFont = this.$$$getFont$$$(null, -1, 14, Year2Label.getFont());
        if (Year2LabelFont != null) Year2Label.setFont(Year2LabelFont);
        Year2Label.setForeground(new Color(-16777216));
        Year2Label.setText("Year");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panelMain.add(Year2Label, gbc);
        Day2TextField = new JTextField();
        Day2TextField.setBackground(new Color(-1));
        Font Day2TextFieldFont = this.$$$getFont$$$(null, -1, 14, Day2TextField.getFont());
        if (Day2TextFieldFont != null) Day2TextField.setFont(Day2TextFieldFont);
        Day2TextField.setForeground(new Color(-16777216));
        Day2TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(Day2TextField, gbc);
        Month2TextField = new JTextField();
        Month2TextField.setBackground(new Color(-1));
        Font Month2TextFieldFont = this.$$$getFont$$$(null, -1, 14, Month2TextField.getFont());
        if (Month2TextFieldFont != null) Month2TextField.setFont(Month2TextFieldFont);
        Month2TextField.setForeground(new Color(-16777216));
        Month2TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(Month2TextField, gbc);
        Year2TextField = new JTextField();
        Year2TextField.setBackground(new Color(-1));
        Font Year2TextFieldFont = this.$$$getFont$$$(null, -1, 14, Year2TextField.getFont());
        if (Year2TextFieldFont != null) Year2TextField.setFont(Year2TextFieldFont);
        Year2TextField.setForeground(new Color(-16777216));
        Year2TextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(Year2TextField, gbc);
        CalculateButton = new JButton();
        CalculateButton.setBackground(new Color(-1));
        Font CalculateButtonFont = this.$$$getFont$$$(null, -1, 14, CalculateButton.getFont());
        if (CalculateButtonFont != null) CalculateButton.setFont(CalculateButtonFont);
        CalculateButton.setText("Calulate");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(CalculateButton, gbc);
        HoursSleptTextField = new JTextField();
        HoursSleptTextField.setBackground(new Color(-1));
        HoursSleptTextField.setEditable(false);
        Font HoursSleptTextFieldFont = this.$$$getFont$$$(null, -1, 14, HoursSleptTextField.getFont());
        if (HoursSleptTextFieldFont != null) HoursSleptTextField.setFont(HoursSleptTextFieldFont);
        HoursSleptTextField.setForeground(new Color(-16777216));
        HoursSleptTextField.setHorizontalAlignment(0);
        HoursSleptTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(HoursSleptTextField, gbc);
        ExitButton = new JButton();
        ExitButton.setBackground(new Color(-1));
        Font ExitButtonFont = this.$$$getFont$$$(null, -1, 14, ExitButton.getFont());
        if (ExitButtonFont != null) ExitButton.setFont(ExitButtonFont);
        ExitButton.setText("Exit");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelMain.add(ExitButton, gbc);
        DaysAliveTextField = new JTextField();
        DaysAliveTextField.setBackground(new Color(-1));
        DaysAliveTextField.setEditable(false);
        Font DaysAliveTextFieldFont = this.$$$getFont$$$(null, -1, 14, DaysAliveTextField.getFont());
        if (DaysAliveTextFieldFont != null) DaysAliveTextField.setFont(DaysAliveTextFieldFont);
        DaysAliveTextField.setForeground(new Color(-16777216));
        DaysAliveTextField.setHorizontalAlignment(0);
        DaysAliveTextField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 20);
        panelMain.add(DaysAliveTextField, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
